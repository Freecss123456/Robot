自带机器人模型：mdl_puma560
例如：
>>mdl_puma560
>>p560.plot(qn,  'workspace',[xmn, xmx ymn ymx zmn zmx]);

建立连杆：
L = Link(DH, OPTIONS) 
DH = [THETA D A ALPHA SIGMA OFFSET] 
THETA D A ALPHA 为基本的DH参数 
theta 关节角度 
d 连杆偏移量 
a 连杆长度 
alpha 连杆扭角 
Sigma 可以设定连杆的类型 0为旋转 1为伸长 
offset 关节变量偏移量 
qlim 关节变量范围[min max] 
Options： 
‘standard’ for standard D&H parameters (default). 
‘modified’ for modified D&H parameters. 
‘revolute’ 旋转关节(default) 
‘prismatic’ 伸长关节

%轨迹生成
L1=Link([0 12.4 0 pi/2 0 -pi/2]);
L2=Link([0 0 0 -pi/2 ]);
L3=Link([0 15.43 0 pi/2 ]);
Rbt=SerialLink([L1 L2 L3]);

q0=[0 0 0];
qsq1=[0.46088 0.37699 0];
qsq2=[.81681 0.56549 0];

t=0:.04:2;
sqtraj1=jtraj(q0,qsq1,t); 
sqtraj2=jtraj(qsq1,qsq2,t); 

hold on
atj=zeros(4,4);
view(-35,40)
xlim([-20,20])
ylim([-20,20])
zlim([0,30])
for i=1:1:51    
    atj=Rbt.fkine(sqtraj1(i,:));    
    jta=transpose(atj.T);    
    JTA(i,:)=jta(4,1:3);    
    jta=JTA;    
    plot2(jta(i,:),'r.')    
    Rbt.plot(sqtraj1(i,:))    
    plot2(JTA,'b')
end
for i=1:1:51
    atj2=Rbt.fkine(sqtraj2(i,:));    
    jta2=transpose(atj2.T);    
    JTA2(i,:)=jta2(4,1:3);    
    jta2=JTA2;    
    plot2(jta2(i,:),'r.')    
    Rbt.plot(sqtraj2(i,:))    
    plot2(JTA2,'b')
end
%轨迹生成
